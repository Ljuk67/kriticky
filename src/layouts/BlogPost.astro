---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import { tagToSlug } from '../lib/slug';
import Comments from '../components/Comments.astro';

type Props = CollectionEntry<'blog'>['data'] & { slug: string; showComments?: boolean };

const { title, description, pubDate, updatedDate, slug, author, tags, showComments = true } = Astro.props as Props;
// Map of generated SVG thumbs (url strings)
const thumbs = import.meta.glob('../assets/thumbs/*.svg', { eager: true, query: '?url', import: 'default' });
const heroUrl = (thumbs as Record<string, string>)[`../assets/thumbs/${slug}.svg`];
---

<html lang="sk">
	<head>
		<BaseHead
			title={title}
			description={description}
			type="article"
			author={author}
			datePublished={pubDate}
			dateModified={updatedDate}
			keywords={Array.isArray(tags) ? tags : []}
		/>
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 600px;
				display: block;
				margin: 0 auto;
			}
			.hero-image img {

				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.meta {
				margin-top: 0.25em;
				color: rgb(var(--gray));
				font-size: 0.95em;
			}
			.tags {
				margin-top: 0.25em;
				color: rgb(var(--gray));
			}
			.tag {
				display: inline-block;
				background: rgb(var(--gray-light));
				color: rgb(var(--gray-dark));
				border-radius: 999px;
				text-decoration: none;
				padding: 7px 15px;
				margin: 0 6px;
				font-size: 0.85em;
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article class="blog-post">
				<div class="hero-image">
					{heroUrl && <img src={heroUrl} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Naposledy aktualizované <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<div class="meta">Autor: {author}</div>
						{Array.isArray(tags) && tags.length > 0 && (
							<div class="tags" aria-label="Značky">
								{tags.map((t) => <a class="tag" href={`/tags/${tagToSlug(t)}/`}>{t}</a>)}
							</div>
						)}
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
			{showComments && (
				<section class="prose" style="margin-top: 2rem;">
					<Comments slug={slug} />
				</section>
			)}
		</main>
		<Footer />
	</body>
</html>

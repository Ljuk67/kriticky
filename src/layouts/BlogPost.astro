---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import { tagToSlug } from '../lib/slug';
import Comments from '../components/Comments.astro';

type Props = CollectionEntry<'blog'>['data'] & { slug: string; showComments?: boolean };

const { title, description, pubDate, updatedDate, slug, author, tags, showComments = true } = Astro.props as Props;
// Map of generated SVG thumbs (url strings)
const thumbs = import.meta.glob('../assets/thumbs/*.svg', { query: '?url', import: 'default' });
const heroUrl = await (thumbs[`../assets/thumbs/${slug}.svg`] || thumbs[`../assets/thumbs/default.svg`])() as string;
// Determine newer/older posts based on pubDate (desc)
const allPosts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const currentIndex = allPosts.findIndex((p) => p.id === slug);
const newerPost = currentIndex > 0 ? allPosts[currentIndex - 1] : undefined; // novší článok
const olderPost = currentIndex >= 0 && currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : undefined; // starší článok
---

<html lang="sk">
	<head>
		<BaseHead
			title={title}
			description={description}
			image={{ src: heroUrl }}
			type="article"
			author={author}
			datePublished={pubDate}
			dateModified={updatedDate}
			keywords={Array.isArray(tags) ? tags : []}
		/>
		<style>
			
			/* Apply card styling only on screens wider than mobile */
			@media (min-width: 640px) {
				body{background: #fafafa !important;}
				.blog-post { background-color: white; padding: 2rem; border-radius: 20px; }
			}
			.hero-image { display: block; margin: 0 auto; }
			.hero-image img {
				/* Make hero responsive and prevent horizontal overflow on mobile */
				display: block;
				max-width: 100%;
				width: 100%;
				height: auto;
				border-radius: 27px;
				box-shadow: var(--box-shadow);
			}


			.prose { padding: 0; color: rgb(var(--gray-dark)); }
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 20px 0 0.5em 0;
				font-size: 2.2em;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.meta {
				margin-top: 0.25em;
				color: rgb(var(--gray));
				font-size: 0.95em;
			}
			.prose .tags {
				margin-top: 0.45em;
			}
			.prose .tag {
				display: inline-block;
				color: black;
				border-radius: 999px;
				text-decoration: none;
				padding: 7px 15px;
				margin: 0 6px;
				font-size: 0.85em;
			}
			.prose .tag:hover {color: black;}
			.last-updated-on {
				font-style: italic;
			}
			.post-nav { 
				display: flex; 
				justify-content: space-between; 
				gap: 1rem; 
				margin: 2rem 0 0; 
				font-size: 0.9em; 
				color: rgb(var(--gray));
			}
			.post-nav a { color: inherit; text-decoration: none; }
			.post-nav a:hover { color: rgb(var(--accent)); text-decoration: underline; }
			@media (max-width: 720px) {
				.title h1 {font-size: 1.5em;}
			}
		</style>
	</head>

	<body>
		<Header />
		<main class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
			<article class="blog-post" >
				<div class="hero-image">
					{heroUrl && <img src={heroUrl} alt="" />}
				</div>
				<div class="prose prose-lg max-w-none">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Naposledy aktualizované <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<div class="meta">Autor: {author}</div>
						{Array.isArray(tags) && tags.length > 0 && (
							<div class="tags" aria-label="Značky">
								{tags.map((t) => <a class="tag" href={`/tags/${tagToSlug(t)}/`}>{t}</a>)}
							</div>
						)}
						<h1>{title}</h1>
					</div>
					<slot />
				</div>
			</article>
			{(newerPost || olderPost) && (
				<nav class="post-nav" aria-label="Navigácia medzi článkami">

					{olderPost ? (
						<a class="older" rel="next" href={`${import.meta.env.BASE_URL}blog/${olderPost.id}/`}>
							&lt;&lt; <b>Starší:</b>  <br/>{olderPost.data.title} 
						</a>
					) : <span />}
										{newerPost ? (
						<a class="newer" rel="prev" href={`${import.meta.env.BASE_URL}blog/${newerPost.id}/`}>
							 <b>Novší:</b> &gt;&gt;<br/> {newerPost.data.title} 
						</a>
					) : <span />}
				</nav>
			)}
			{showComments && (
				<section class="mt-8">

					
					<Comments slug={slug} />
				</section>
			)}
		</main>
		<Footer />
	</body>
</html>

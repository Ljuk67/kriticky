---
import Container from "../container.astro";
import Link from "../ui/link.astro";
import { SITE_TITLE } from "../../consts";
import Dropdown from "./dropdown.astro";
import { Astronav, MenuItems, MenuIcon } from "astro-navbar";

const menuitems = [
  { title: "Domov", path: "/" },
  {
    title: "Blog",
    path: "/blog",
    children: [
      { title: "Politika", path: "/categories/politika/" },
      { title: "Veda", path: "/categories/veda/" },
      { title: "Vz≈•ahy", path: "/categories/vztahy/" },
    ],
  },
  { title: "O Projekte", path: "/about" },
  { title: "Kontakt", path: "/kontakt" },
];
---

<style>
#astronav-menu{ 
    background: white;
    border: 0px;
    color: black;
}

</style>

<Container>
  <header class="flex flex-col lg:flex-row justify-between items-center mt-2 mb-2">
    <Astronav>
      <div class="flex w-full lg:w-auto items-center justify-between">
        <span class="sitename flex flex-row items-center justify-center">
          
          <a href={`${import.meta.env.BASE_URL}`}>
            <img src={`${import.meta.env.BASE_URL}favicon.svg`} alt="" class="logo" />  
            {SITE_TITLE}
          </a>
        </span>
        <div class="block lg:hidden">
          <MenuIcon class="w-6 h-6 mt-2" />
        </div>
      </div>
      <MenuItems class="hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
        <ul class="flex flex-col lg:flex-row lg:gap-3 list-none m-0 p-0">
          {
            menuitems.map((item, index) => (
              <>
                {item.children && (
                  <Dropdown
                    title={item.title}
                    path={item.path}
                    children={item.children}
                    lastItem={index === menuitems.length - 1}
                  />
                )}

                {!item.children && (
                  <li>
                    <a
                      href={item.path}
                      class="flex lg:px-3 py-2 items-center text-gray-700 hover:text-black no-underline">
                      <span> {item.title}</span>
                      {item.badge && (
                        <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">
                          New
                        </span>
                      )}
                    </a>
                  </li>
                )}
              </>
            ))
          }
        </ul>

      </MenuItems>
    </Astronav>
  </header>
</Container>
<style>
  /* Style inside child component via :global since Astro scopes styles per component */
  /* Reset native <menu> defaults in astro-navbar components */
  :global(.astronav-dropdown) {
    padding: 0;
    margin: 0;
    list-style: none;
  }
  :global(#astronav-menu) {
    -webkit-appearance: none;
    appearance: none;
    background: none;
    border: 0;
    padding: 0; /* fully reset padding to avoid indent */
    padding-inline-start: 0; /* ensure no left indent */
    margin: 0; /* reset UA default for <menu> */
    list-style: none;
    line-height: 0;
    color: rgb(var(--black));
    border-radius: 8px;
  }
  :global(#astronav-menu:hover) { background: rgba(0,0,0,0.04); }
  :global(#astronav-menu:focus-visible) { outline: 2px solid var(--accent); outline-offset: 2px; }

  /* Mobile-first: Always show submenu; hide chevron */
  :global(.astronav-dropdown > .dropdown-toggle) {
    display: block !important; /* override hidden */
    position: static; /* ensure it pushes items below */
  }
  :global(.astronav-dropdown > button) {
    display: none; /* hide chevron on mobile */
  }

  /* Desktop (lg+): revert to chevron + hidden dropdown until hover/click */
  @media (min-width: 1024px) {
    :global(.astronav-dropdown > .dropdown-toggle) {
      display: none !important; /* hidden by default on desktop */
      position: absolute; /* allow floating dropdown */
      left: 0.75rem; /* align with start of the label (matches lg:pl-3) */
      top: 100%; /* place directly under trigger row */
    }
    :global(.astronav-dropdown > button) {
      display: inline-flex; /* show chevron on desktop */
    }
    /* Also show when expanded via click (JS toggles aria-expanded) */
    :global(.astronav-dropdown[aria-expanded="true"] > .dropdown-toggle) {
      display: block !important;
    }
  }

  /* Desktop: open dropdown on hover */
  @media (hover: hover) and (pointer: fine) {
    :global(.astronav-dropdown:hover > .dropdown-toggle),
    :global(li.has-submenu:hover .astronav-dropdown > .dropdown-toggle) {
      display: block !important; /* override hidden */
    }
  }
</style>

---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import Header from '../../components/Header.astro';
import { tagToSlug } from '../../lib/slug';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = new Set<string>();
  for (const p of posts) for (const t of (p.data.tags ?? [])) tags.add(t);
  return [...tags].map((t) => ({ params: { tag: tagToSlug(t) }, props: { tag: t } }));
}

const { tag } = Astro.props as { tag: string };
const posts = (await getCollection('blog'))
  .filter((p) => (p.data.tags ?? []).includes(tag))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Thumbnails with lazy import and fallback to default.svg
const thumbs = import.meta.glob('../../assets/thumbs/*.svg', { query: '?url', import: 'default' });
async function getThumb(id: string) {
  const key = `../../assets/thumbs/${id}.svg`;
  const def = `../../assets/thumbs/default.svg`;
  const loader = (thumbs as Record<string, () => Promise<string>>)[key] || (thumbs as Record<string, () => Promise<string>>)[def];
  return await loader();
}
const enhanced = await Promise.all(posts.map(async (p) => ({ ...p, thumb: await getThumb(p.id) })));
---

<!doctype html>
<html lang="sk">
  <head>
    <BaseHead title={`Značka: ${tag}`} description={`Články so značkou ${tag}`} />
  </head>
  <body>
    <Header />
    <main class="archive mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
      <h1>Články so značkou „{tag}”</h1>
      <p><a href={`${import.meta.env.BASE_URL}tags/`}>← Všetky značky</a></p>
      {enhanced.length === 0 && <p class="text-gray-500">Žiadne články pre túto značku.</p>}
      {enhanced.length > 0 && (
        <ul class="grid grid-cols-1 sm:grid-cols-2 gap-8 list-none p-0 m-0">
          {enhanced.map((post) => (
            <li class="glass rounded-[14px] p-3">
              <a class="block group no-underline" href={`${import.meta.env.BASE_URL}blog/${post.id}/`}>
                <img class="w-full h-auto rounded-[14px] mb-4" src={post.thumb} alt="" />
                <h2 class="posttitle text-center text-[1.5em]">{post.data.title}</h2>
                <div class="text-center date text-gray-500 group-hover:text-[var(--accent)]">
                  <FormattedDate date={post.data.pubDate} />
                </div>
                <div class="text-center meta text-gray-500">Autor: {post.data.author}</div>
              </a>
              {Array.isArray(post.data.tags) && post.data.tags.length > 0 && (
                <div class="tags mt-1 text-gray-500" aria-label="Značky">
                  {post.data.tags.map((t) => <a class="inline-block bg-gray-200 text-gray-800 rounded-full px-2 py-0.5 no-underline mr-1" href={`/tags/${tagToSlug(t)}/`}>{t}</a>)}
                </div>
              )}
            </li>
          ))}
        </ul>
      )}
    </main>
    <Footer />
  </body>
  </html>

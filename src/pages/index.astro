---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import { tagToSlug } from '../lib/slug';
// Map of generated SVG thumbs (url strings)
const thumbs = import.meta.glob('../assets/thumbs/*.svg', { eager: true, query: '?url', import: 'default' });
const getThumb = (id) => thumbs[`../assets/thumbs/${id}.svg`];

const allPosts = await getCollection('blog');
const latestPosts = allPosts
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .slice(0, 6);

// Compute tag cloud data
const tagCounts = new Map<string, number>();
for (const p of allPosts) {
  const tags = Array.isArray(p.data.tags) ? p.data.tags : [];
  for (const t of tags) tagCounts.set(t, (tagCounts.get(t) ?? 0) + 1);
}
const tags = [...tagCounts.entries()].sort((a, b) => a[0].localeCompare(b[0], 'sk'));
const allTags = [...tagCounts.entries()].sort((a, b) => a[0].localeCompare(b[0], 'sk'));
const counts = tags.map(([, c]) => c);
const minCount = counts.length ? Math.min(...counts) : 0;
const maxCount = counts.length ? Math.max(...counts) : 0;
const scale = (c: number) => {
  if (minCount === maxCount) return 1.0;
  const t = (c - minCount) / (maxCount - minCount);
  return 0.9 + t * 0.6; // 0.9em .. 1.5em
};
---

<!doctype html>
<html lang="sk">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			.latest-posts {
				margin-top: 3rem;
			}
			.posts {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			.posts li {
				width: calc(50% - 1rem);
			}
			.posts li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			.posts li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			.posts li:first-child img,
			.posts li:first-child svg {
				width: 100%;
			}
			.posts li:first-child .title {
				font-size: 2.369rem;
			}
			.posts li img,
			.posts li svg {
				display: block;
				width: 100%;
				height: auto;
				margin-bottom: 20px;
				border-radius: 12px;
			}
			.posts li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			.posts li a:hover h4,
			.posts li a:hover .date {
				color: rgb(var(--accent));
			}
			.posts a:hover img,
			.posts a:hover svg {
				box-shadow: var(--box-shadow);
			}
			.view-all {
				margin-top: 1rem;
			}
			.tag-cloud {
				margin-top: 4rem;
				padding-top: 1rem;
				border-top: 1px solid rgb(var(--gray-light));
			}
			.tag-cloud .tags { 
				list-style: none; 
				padding: 0; 
				margin: 0.5rem 0 0 0; 
				display: flex; 
				flex-wrap: wrap; 
				gap: 30px; 
				align-items: baseline; 
			}
			.tag-cloud a { 
				text-decoration: none; 
				background: none; 
				color: rgb(var(--black)); 
				padding: 0; 
				transition: color 0.2s ease; 
			}
			.tag-cloud a:hover { 
				color: var(--accent); 
				text-decoration: underline; 
			}
			@media (max-width: 720px) {
				.posts {
					gap: 0.5em;
				}
				.posts li {
					width: 100%;
					text-align: center;
				}
				.posts li:first-child {
					margin-bottom: 0;
				}
				.posts li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<h1>üßë‚ÄçüöÄ Kritick√© myslenie v praxi</h1>
			<p>
				Toto je ofici√°lna ≈°tartovacia ≈°abl√≥na blogu pre <a href="https://astro.build/">Astro</a>.
				Je ƒæahk√°, minim√°lne ≈°t√Ωlovan√° a vhodn√° ako z√°klad pre osobn√Ω web, blog alebo portf√≥lio.
			</p>
			<p>
				V projekte s√∫ u≈æ predkonfigurovan√© niektor√© integr√°cie (pozri s√∫bor
				<code>astro.config.mjs</code>). ƒéal≈°ie n√°stroje ako Tailwind, React ƒçi Vue m√¥≈æe≈° prida≈• cez
				<a href="https://astro.build/integrations">Astro Integrations</a>.
			</p>
			<p>Tu je p√°r tipov, kde zaƒça≈•:</p>
			<ul>
				<li>Uprav t√∫to str√°nku v <code>src/pages/index.astro</code>.</li>
				<li>Uprav polo≈æky hlaviƒçky v <code>src/components/Header.astro</code>.</li>
				<li>Pridaj svoje meno do p√§tiƒçky v <code>src/components/Footer.astro</code>.</li>
				<li>Pozri si uk√°≈ækov√© ƒçl√°nky v <code>src/content/blog/</code>.</li>
				<li>Prisp√¥sob rozlo≈æenie ƒçl√°nku v <code>src/layouts/BlogPost.astro</code>.</li>
			</ul>
			<p>
				Ak sa zasekne≈°, <a href="https://docs.astro.build/">preƒç√≠taj dokument√°ciu</a>
				alebo sa op√Ωtaj na <a href="https://astro.build/chat">Discorde</a>.
			</p>

			<section class="latest-posts">
				<h2>Najnov≈°ie ƒçl√°nky</h2>
				<ul class="posts">
					{
						latestPosts.map((post) => (
							<li>
								<a href={`/blog/${post.id}/`}>
									<img src={getThumb(post.id)} alt="" />
									<h4 class="title">{post.data.title}</h4>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))
					}
				</ul>
				<p class="view-all"><a href={`${import.meta.env.BASE_URL}blog/`}>Zobrazi≈• v≈°etky ƒçl√°nky ‚Üí</a></p>
			</section>
			<hr/>
			{tags.length > 0 && (

			<style>
			  ul.tags { list-style: none; padding: 0; margin: 0; display: flex; flex-wrap: wrap; gap: 10px; }
			  a.tag { display: inline-block; background: rgb(var(--gray-light)); color: rgb(var(--gray-dark)); border-radius: 999px; padding: 6px 12px; text-decoration: none; }
			  a.tag:hover { background: rgba(var(--gray), 0.25); }
			  .count { color: rgb(var(--gray)); margin-left: 6px; font-size: 0.9em; }
			</style>

			<section>
			  <h3>Znaƒçky</h3>
			  <ul class="tags">
				{allTags.map(([t, c]) => (
				  <li>
					<a class="tag" href={`/tags/${tagToSlug(t)}/`}>{t} <span class="count">({c})</span></a>
				  </li>
				))}
			  </ul>
			</section>
			)}

		</main>

			
		<Footer />
	</body>
</html>

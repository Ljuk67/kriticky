---
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import Header from '../../components/Header.astro';
import { tagToSlug } from '../../lib/slug';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const prod = import.meta.env.PROD;
  const visible = prod ? posts.filter((p) => p.data.status === 'published') : posts;
  const cats = new Set<string>();
  for (const p of visible) for (const c of (p.data.categories ?? [])) cats.add(c);
  return [...cats].map((c) => ({ params: { category: tagToSlug(c) }, props: { category: c } }));
}

const { category } = Astro.props as { category: string };
const posts = (await getCollection('blog'))
  .filter((p) => (import.meta.env.PROD ? p.data.status === 'published' : true))
  .filter((p) => (p.data.categories ?? []).includes(category))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  const thumbs = import.meta.glob('../../assets/thumbs/*.svg', { query: '?url', import: 'default' });
  async function getThumb(id) {
  const key = `../../assets/thumbs/${id}.svg`;
  const def = `../../assets/thumbs/default.svg`;
  const loader = (thumbs)[key] || (thumbs)[def];
  return await loader();
}
const enhanced = await Promise.all(posts.map(async (p) => ({ ...p, thumb: await getThumb(p.id) })));
---

<!doctype html>
<html lang="sk">
  <head>
    <BaseHead title={`Kategória: ${category}`} description={`Články v kategórii ${category}`} />
    <style>
      ul { list-style: none; padding: 0; margin: 0; }
      li { margin-bottom: 1rem; }
      a { text-decoration: none; }
      .title { margin: 0; color: rgb(var(--black)); }
      .date { margin: 0; color: rgb(var(--gray)); }
    </style>
  </head>
  <body>
    <Header />
    <main class="archive mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
      <h1>Kategória „{category}”</h1>
      <p><a href={`${import.meta.env.BASE_URL}categories/`}>← Všetky kategórie</a></p>
      {posts.length === 0 && <p class="text-gray-500">Žiadne články v tejto kategórii.</p>}
      <ul class="grid grid-cols-1 sm:grid-cols-2 gap-8 list-none p-0 m-0">
      {posts.length > 0 && (
       /* <ul>
          {posts.map((post) => (
            <li>
              <a href={`${import.meta.env.BASE_URL}blog/${post.id}/`}>
                <h4 class="title">{post.data.title}</h4>
                <p class="date"><FormattedDate date={post.data.pubDate} /></p>
              </a>
            </li>
          ))}
        </ul>*/

        enhanced.map((post, i) => (
							<li class="glass rounded-[14px] grid-cols-2 p-3">
								<a class="block group no-underline" href={`${import.meta.env.BASE_URL}blog/${post.id}/`}>
									<img class="w-full h-auto rounded-[14px] mb-4" src={post.thumb} alt="" />
									<h2 class="posttitle text-center text-[1.5em]">{post.data.title}</h2>
									<div class="text-center date text-gray-500 group-hover:text-[var(--accent)]">
										<FormattedDate date={post.data.pubDate} />
									</div>
									<div class="text-center meta text-gray-500">Autor: {post.data.author}</div>
								</a>
								{Array.isArray(post.data.tags) && post.data.tags.length > 0 && (
									<div class="tags mt-1 text-gray-500" aria-label="Značky">
										{post.data.tags.map((t) => <a class="inline-block bg-gray-200 text-gray-800 rounded-full px-2 py-0.5 no-underline mr-1" href={`/tags/${tagToSlug(t)}/`}>{t}</a>)}
									</div>
								)}
							</li>
						))
      )}
    </ul>
    </main>
    <Footer />
  </body>
  </html>

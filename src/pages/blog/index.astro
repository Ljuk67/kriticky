---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import Header from '../../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';
import { tagToSlug } from '../../lib/slug';
// Generated SVG thumbnails (lazy) with fallback to default.svg
const thumbs = import.meta.glob('../../assets/thumbs/*.svg', { query: '?url', import: 'default' });
async function getThumb(id) {
  const key = `../../assets/thumbs/${id}.svg`;
  const def = `../../assets/thumbs/default.svg`;
  const loader = (thumbs)[key] || (thumbs)[def];
  return await loader();
}

const posts = (await getCollection('blog'))
  .filter((p) => (import.meta.env.PROD ? p.data.status === 'published' : true))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const enhanced = await Promise.all(posts.map(async (p) => ({ ...p, thumb: await getThumb(p.id) })));

// Compute categories with at least one post
const catCounts = new Map<string, number>();
for (const p of posts) {
  const cats = Array.isArray(p.data.categories) ? p.data.categories : [];
  for (const c of cats) catCounts.set(c, (catCounts.get(c) ?? 0) + 1);
}
const allCategories = [...catCounts.entries()].sort((a, b) => a[0].localeCompare(b[0], 'sk'));
---

<!doctype html>
<html lang="sk">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style></style>
	</head>
	<body>
		<Header />
		<main class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 archive">
			<h1 class="text-center">Všetky články o kritickom myslení v praxi</h1>
			{allCategories.length > 0 && (
				<div class="mt-3 mb-6 text-center">
					<ul class="inline-flex flex-wrap gap-2 p-0 m-0 list-none" aria-label="Kategórie">
						{allCategories.map(([c, count]) => (
							<li>
								<a class="inline-block bg-gray-200 text-gray-800 rounded-full px-2 py-0.5 no-underline mr-1" href={`/categories/${tagToSlug(c)}/`}>{c} <span class="text-gray-500 ml-1 text-sm">({count})</span></a>
							</li>
						))}
					</ul>
				</div>
			)}
			<section>
				<ul class="grid grid-cols-1 sm:grid-cols-2 gap-8 list-none p-0 m-0">
					{
						enhanced.map((post, i) => (
							<li class={['glass','rounded-[14px]', i === 0 ? 'sm:col-span-2 p-4' : 'p-3'].join(' ')}>
								<a class="block group no-underline" href={`${import.meta.env.BASE_URL}blog/${post.id}/`}>
									<img class="w-full h-auto rounded-[14px] mb-2" src={post.thumb} alt="" />
									<h2 class={['posttitle', 'text-center', i === 0 ? 'text-[1.8em] font-semibold' : 'text-[1.5em]'].join(' ')}>{post.data.title}</h2>
									<div class="text-center date text-gray-500 group-hover:text-[var(--accent)]">
										<FormattedDate date={post.data.pubDate} />
									</div>
									<div class="text-center meta text-gray-500">Autor: {post.data.author}</div>
								</a>
								{Array.isArray(post.data.tags) && post.data.tags.length > 0 && (
									<div class="tags mt-1 text-gray-500" aria-label="Značky">
										{post.data.tags.map((t) => <a class="inline-block bg-gray-200 text-gray-800 rounded-full px-2 py-0.5 no-underline mr-1" href={`/tags/${tagToSlug(t)}/`}>{t}</a>)}
									</div>
								)}
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
